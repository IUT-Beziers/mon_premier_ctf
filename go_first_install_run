#!/bin/bash


IPSERVER=127.0.0.1


#
# Extract default config   
#
echo "Extracting default config"
if [ -d ctfd_config/tmp ]; then
    rm -R ctfd_config/tmp
fi
mkdir ctfd_config/tmp
unzip -q -d ctfd_config/tmp ctfd_config/empty_conf.zip

#
# Generate CTFd admin password
#



#
# Generate config from challenge directories
#
echo "Generating config"
python ./gen_config.py


#
# Update IPSERVER in challenge descriptions
#
echo "Replacing IPSERVER by $IPSERVER"
sed -i "s/IPSERVER/$IPSERVER/g" ./ctfd_config/tmp/*/*.json 


#
# Rebuild zip
# 
# zip must not contain dir entries (-D option)
cd ./ctfd_config/tmp
zip -r -D ../../myctf.zip ./*
cd -
rm -Rf ctfd_config/tmp
echo "myctf.zip generated for ctfd"


#
# is Docker daemon running ?
service docker start

#
# is CTFD clean ?
# check if .data exist



#
# Launch CTFd 
# 
cd CTFd
docker-compose build
docker-compose up -d
cd -


#
# Start Dockers for challenges
#
python -c 'from gen_config import build_challenges; build_challenges()'
python -c 'from gen_config import start_challenges; start_challenges()'


#
# Start vitualbox VMs for challenges
#


#
# Copy and import ctfd config
#
cd CTFd
cp ../myctf.zip .
docker exec ctfd_ctfd_1 python import.py myctf.zip
cd -



#
# Logs
#
# docker-compose logs




